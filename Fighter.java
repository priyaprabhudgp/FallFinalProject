import java.util.Scanner;
import java.util.Random;


/**
 * fighter class storing fighter traits and basic actions
 * @author arie
 */
public class Fighter {
    private String name;
    private String element;
    private int attack=0;
    private int shield =0;
    public int health=100;

    private int currentattack;
    Scanner in = new Scanner(System.in);
    Random rand = new Random();

    /**
     * Fighter constructor taking in name and element
     * @param name the name of player/fighter
     * @param element selected fighter element
     */
    public Fighter(String name, String element){
        this.name = name;
        this.element = element;
    }

    public int getHealth(){
        return health;
    }
    public int getAttack(){ //get current attack
        return currentattack;
    }

    /**
     * evaluate player selected element
     * @return attack reload and shield info based on selected element
     */
    public String playerelement(){
        if(element.equals("üíß")||element.equals("water")){ //water info
            element = "water";
            return "Water abilities... "  +"\n|Ôø£Ôø£Ôø£Ôø£Ôø£Ôø£Ôø£Ôø£Ôø£Ôø£Ôø£Ôø£Ôø£Ôø£|\n" +
                    " üíß Water reload = 3 \n üíß Water shield = 10\n" +
                    "|ÔºøÔºøÔºøÔºøÔºøÔºøÔºøÔºøÔºøÔºøÔºøÔºøÔºøÔºø|\n" +
                    "              \\ (‚Ä¢‚ó°‚Ä¢) /\n" +
                    "               \\      /\n";

        }else if(element.equals("‚õ∞\uFE0F")||element.equals("earth")) {//earth info
            element = "earth";
            return "Earth abilities... "  +"\n|Ôø£Ôø£Ôø£Ôø£Ôø£Ôø£Ôø£Ôø£Ôø£Ôø£Ôø£Ôø£Ôø£Ôø£|\n" +
                    " ‚õ∞\uFE0F Earth reload = 5 \n ‚õ∞\uFE0F Earth shield = 5\n" +
                    "|ÔºøÔºøÔºøÔºøÔºøÔºøÔºøÔºøÔºøÔºøÔºøÔºøÔºøÔºø|\n" +
                    "              \\ (‚Ä¢‚ó°‚Ä¢) /\n" +
                    "               \\      /\n";
            //return "Earth attack = 2 \nEarth defence = 2\n";
        }else if(element.equals("\uD83D\uDD25")||element.equals("fire")) {//fire info
            element = "fire";
            return "Fire abilities... "  +"\n|Ôø£Ôø£Ôø£Ôø£Ôø£Ôø£Ôø£Ôø£Ôø£Ôø£Ôø£Ôø£Ôø£Ôø£|\n" +
                    " \uD83D\uDD25 Fire reload = 7 \n \uD83D\uDD25 Fire shield = 2\n" +
                    "|ÔºøÔºøÔºøÔºøÔºøÔºøÔºøÔºøÔºøÔºøÔºøÔºøÔºøÔºø|\n" +
                    "              \\ (‚Ä¢‚ó°‚Ä¢) /\n" +
                    "               \\      /\n";
            //return "Fire attack = 2 \nFire defence = 2\n";
        }else if(element.equals("\uD83D\uDCA8")||element.equals("wind")||element.equals("air")) {//wind info
            element = "wind";
            return "Wind abilities... "  +"\n|Ôø£Ôø£Ôø£Ôø£Ôø£Ôø£Ôø£Ôø£Ôø£Ôø£Ôø£Ôø£Ôø£Ôø£|\n" +
                    " \uD83D\uDCA8 Wind reload = 8 \n \uD83D\uDCA8 Wind shield = 3\n" +
                    "|ÔºøÔºøÔºøÔºøÔºøÔºøÔºøÔºøÔºøÔºøÔºøÔºøÔºøÔºø|\n" +
                    "              \\ (‚Ä¢‚ó°‚Ä¢) /\n" +
                    "               \\      /\n";

        }else{
            return "";
        }

    }

    /**
     * check if game is over, print updated player stats and print end game visuals
     */
    public void game(){
        if(health > 0){ //updated current player stats
            System.out.print("Player " + name + " stats" +"\n|Ôø£Ôø£Ôø£Ôø£Ôø£Ôø£Ôø£Ôø£Ôø£Ôø£Ôø£Ôø£Ôø£Ôø£|\n" +
                    "  ‚ô° Health: " + health + "\n  ‚öî Attack: " + attack  +
                    "\n|ÔºøÔºøÔºøÔºøÔºøÔºøÔºøÔºøÔºøÔºøÔºøÔºøÔºøÔºø|\n" +
                    "              \\ (‚Ä¢‚ó°‚Ä¢) /\n" +
                    "               \\      /\n");
        }else{ //image printed when player loses
            System.out.println("‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†â‚†ª‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ø‚†ø‚†õ‚†õ‚†õ‚†õ‚†õ‚†ª‚†ø‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†ã‚†Å‚¢π‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø\n"+
                    "‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á‚†Ä‚¢∞‚£¶‚°ú‚¢ª‚°ø‚†õ‚¢ã‚£Ä‚£§‚£¥‚£∂‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£∂‚£Ñ‚°à‚¢ô‚†õ‚¢ø‚£ø‚†ã‚£Ä‚°Ñ‚†Ä‚£∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø\n"+
                    "‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†Ä‚†∏‚†ü‚†ã‚¢Ä‚£†‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∂‚£§‚°ò‚¢õ‚°É‚†Ä‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø\n"+
                    "‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°à‚†Ç‚£†‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£à‚†ª‚£¶‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø\n"+
                    "‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†ã‚£Ä‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚°å‚†ô‚¢ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø\n"+
                    "‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚¢Å‚£º‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†õ‚†ã‚†â‚¢ç‚£â‚†ô‚†ª‚†ø‚¢ø‚°ø‚†ø‚†ã‚†â‚†â‚†â‚†õ‚†ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£¶‚°ë‚†ô‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø\n"+
                    "‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ü‚£†‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†á‚¢†‚£¥‚†Ç‚†Ä‚†Ä‚†à‚¢ª‚£ø‚°Ü‚£Ä‚£Ñ‚¢∫‚°ø‚†ã‚†Ä‚†Ä‚†ê‚£¶‚£Ñ‚†ô‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£å‚¢Ä‚¢ª‚£ø‚£ø‚£ø‚£ø‚°ø‚£ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø\n"+
                    "‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†è‚¢Ä‚£ß‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°Ñ‚†Å‚†π‚£¶‚†Ä‚†Ä‚¢Ä‚£º‚°ü‚¢Å‚£ø‚£ø‚£Ñ‚†≥‚£§‚°Ä‚†Ä‚¢†‚£º‚°ü‚£∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£¶‚†É‚†õ‚£ø‚£ø‚£ø‚£Ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø\n"+
                    "‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†è‚¢†‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£¶‚£Ä‚£à‚†â‚†ø‚†ü‚†â‚†Ä‚†õ‚†õ‚†ª‚¢ø‚£∑‚£å‚°ô‚†õ‚†ã‚£â‚£¥‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°±‚°ú‚£ø‚£∑‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø\n"+
                    "‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†Å‚£Ä‚£º‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ã‚¢Ä‚£†‚£∂‚£æ‚£ø‚£ø‚£∂‚£¶‚£à‚†ô‚†ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£å‚†à‚¢ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø\n"+
                    "‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ã‚¢Ä‚£¥‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†Å‚†Ä‚†ø‚†ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†∑‚†Ñ‚†à‚¢ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚£∂‚£¶‚°ô‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø\n"+
                    "‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ü‚¢Å‚¢¥‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£Ñ‚£Ä‚°Ä‚†Ä‚†Ñ‚†â‚†π‚†ø‚†ã‚¢â‚£Ä‚†Ä‚£Ä‚£†‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£¶‚†ª‚£ø‚£ø‚£ø‚£ø‚£ø\n"+
                    "‚£ø‚£ø‚£ø‚£ø‚£ø‚°ü‚†Å‚£¥‚£ü‚¢Ä‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∂‚£§‚£§‚£§‚£∂‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚°ò‚¢ø‚£ø‚£ø‚£ø\n"+
                    "‚£ø‚£ø‚£ø‚£ø‚°è‚†Ä‚¢Ä‚£ø‚°è‚£º‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ü‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†∞‚†∏‚£ø‚£ø‚£ø\n"+
                    "‚£ø‚£ø‚£ø‚£ø‚°á‚†Ä‚¢ø‚°è‚¢†‚£ø‚†ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ã‚¢∞‚°Ä‚¢ø‚£ø‚£ø\n"+
                    "‚£ø‚£ø‚£ø‚£ø‚°á‚†Ä‚†Ä‚¢†‚£ø‚£ø‚£§‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚¢Ä‚£ø‚°á‚¢∏‚£ø‚£ø\n"+
                    "‚£ø‚£ø‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚°ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ó‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†Ä‚£ø‚£∑‚¢∏‚£ø‚£ø\n"+
                    "‚£ø‚£ø‚£ø‚°ü‚†Ä‚†Ä‚†Ä‚†ò‚£ø‚£á‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£Ø‚£≠‚£≠‚£≠‚£≠‚£â‚£â‚£ô‚£õ‚£õ‚£õ‚°õ‚£ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ü‚†Ä‚¢π‚£ø‚°Ü‚£ø‚£ø\n"+
                    "‚£ø‚£ø‚£ø‚°á‚†Ä‚†Ä‚†Ä‚£Ü‚†ò‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ü‚¢ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†è‚£∞‚°Ü‚†∏‚°ü‚°Ñ‚¢∏‚£ø\n"+
                    "‚£ø‚£ø‚°ø‚†Å‚†Ä‚†Ä‚¢∞‚£ø‚°Ñ‚†ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ø‚†â‚¢Ä‚£ø‚£ø‚°Ñ‚†∏‚£ø‚†ò‚£ø\n"+
                    "‚£ø‚£ø‚°á‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚£ø‚£Ñ‚†π‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†õ‚†Ä‚¢Ä‚£æ‚£ø‚£ø‚°á‚†Ä‚¢π‚°á‚¢ª\n"+
                    "‚£ø‚£ø‚†á‚¢†‚°Ä‚†Ä‚£ø‚£ø‚£ø‚£ø‚£¶‚°à‚†ø‚°ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ü‚†ã‚†â‚†Ä‚¢Ä‚£æ‚£ø‚£ø‚£ø‚¢ó‚†Ä‚¢Ä‚°°‚¢∏\n"+
                    "‚£ø‚£ø‚†Ä‚£º‚†Ä‚†Ä‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£Ñ‚°Ä‚†ò‚†ø‚£Ω‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†õ‚†ã‚†Å‚†Ä‚†Ä‚¢Ä‚£¥‚£ø‚£ø‚£ø‚¢ü‚£µ‚£º‚†Ä‚¢∏‚¢∑‚¢∏\n"+
                    "‚£ø‚£ø‚†Ä‚°ø‚†Ä‚¢∞‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£¶‚°Ä‚†â‚†ª‚£ø‚°ø‚†ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£Ä‚†Ä‚†Ä‚¢Ä‚£¥‚£ø‚£ø‚£ø‚£ø‚£ø‚¢ø‚†∑‚†Å‚†Ä‚°´‚°ø‚¢∏\n"+
                    "‚£ø‚°ø‚†Ä‚°∑‚†Ä‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†á‚†Ä‚†Ä‚†à‚†â‚†í‚†∫‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ø‚†ü‚†ã‚†Ä‚£∂‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£´‚£ü‚°≥‚†§‚¢∞‚°è‚°§‚¢∏\n"+
                    "‚£ø‚°á‚¢†‚°á‚†Ä‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†Ä‚¢Ä‚£∑‚†Ä‚†Ä‚¢∞‚£§‚£Ä‚£â‚†ô‚†ø‚†ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ø‚†ü‚†õ‚¢â‚£â‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚†Ä‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚¢ø‚°Ø‚†ê‚¢¨‚£ø‚£ø‚°®‚¢∏\n"+
                    "‚£ø‚°á‚¢∏‚†Ä‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†Ä‚¢∏‚°ü‚†Ä‚†Ä‚£∏‚£ø‚£ø‚£ø‚£ø‚£∂‚£∂‚£¶‚£§‚£§‚£â‚£â‚†â‚¢â‚¢â‚£â‚£°‚£§‚£§‚£∂‚£∂‚£ø‚£ø‚£ø‚°Ü‚°Ä‚†Ä‚£†‚£∑‚†Ä‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ì‚†à‚¢¨‚£∫‚£ø‚£ø‚†ê‚¢∏\n"+
                    "‚£ø‚°á‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†Ä‚¢∏‚°á‚†Ä‚¢†‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á‚†Ä‚¢∏‚£ø‚°è‚¢∞‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£Ø‚†å‚¢¥‚£Ω‚£ø‚£ø‚†®‚††\n"+
                    "‚£ø‚†á‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†Ä‚¢∏‚†á‚†Ä‚£∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚†Ä‚†Ä‚£ø‚†á‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ñ‚†Ç‚¢û‚£ø‚£ø‚£ø‚¢¨‚††\n"+
                    "‚°è‚†Ä‚†∞‚£¶‚°à‚†ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°è‚†Ä‚†ò‚†Ä‚¢Ä‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°Ñ‚†Ä‚¢π‚°Ü‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á‚†â‚£∫‚†ü‚£ø‚£ø‚¢¢‚†®\n"+
                    "‚°á‚†Ä‚†Ä‚£æ‚†á‚£Ñ‚†π‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£á‚†Ä‚†Å‚†Ä‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†É‚†Ä‚†ò‚†Å‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†Å‚†®‚¢°‚£æ‚£ø‚£ø‚°é‚†Ñ\n"+
                    "‚†Ä‚†Ä‚†Ä‚£ø‚°Ä‚†à‚†Ä‚¢ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ü‚†Ä‚†Ä‚†Ä‚¢†‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£è‚†Ä‚£†‚£ø‚£ø‚£ø‚£ø‚¢∂‚¢ë\n"+
                    "‚†Ä‚†Ä‚†Ä‚£ø‚£ß‚¢Ä‚°Ä‚†Ä‚†ô‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á‚†Ä‚¢∞‚†Ä‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ü‚†Ä‚†ø‚¢ã‚†ô‚£ø‚£ø‚¢ü‚†ê\n"+
                    "‚°á‚†Ä‚†Ä‚†ò‚†É‚†ª‚£∑‚†Ä‚†Ä‚¢π‚£ø‚£ø‚£ø‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á‚†Ä‚£æ‚†Ä‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†Ä‚†Ä‚£¥‚£ø‚°á‚£ø‚°ü‚¢ç‚†Ä\n"+
                    "‚£∑‚°Ñ‚†Ä‚†Ä‚†ê‚†Ä‚†Ä‚£Ä‚†Ä‚£∏‚£ø‚£ø‚£ø‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á‚†Ä‚°Ø‚†Ä‚£º‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†á‚†Ä‚£†‚£ø‚°ø‚†∏‚†è‚£†‚†Ç‚†Ä\n"+
                    "‚£ø‚£ø‚£ß‚£Ñ‚†Ä‚†à‚†¢‚°Ñ‚¢†‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†Ä‚¢∞‚†Ä‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á‚†Ä‚°á‚†Ä‚¢ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ß‚°æ‚†ø‚†ß‚†Ä‚†Ä‚¢†‚†è‚†Ä‚¢Ä\n"+
                    "‚£ø‚£ø‚£ø‚£ø‚£ß‚£§‚£§‚£§‚£¥‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†Ä‚†ò‚†Ä‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†á‚†Ä‚†Ä‚†Ä‚£∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£è‚†õ‚†ì‚†í‚†ì‚†Ä‚†Ä‚¢Ä‚£§‚¢æ‚£ª\n"+
                    "‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†É‚¢Ä‚°Ä‚¢Ä‚†∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ü‚†Ä‚£¥‚£¶‚†Ä‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£∂‚£∂‚£∂‚£∂‚£ø‚£ø‚£ø‚£ø‚£ø\n"+
                    "‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ü‚†Ä‚¢à‚£ó‚†ä‚†£‚°ô‚†ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ü‚¢Å‚£∏‚£ø‚£ø‚£∑‚£Ñ‚°â‚†ô‚†ª‚†ø‚†õ‚†õ‚†õ‚†õ‚†ª‚†ø‚£ø‚£ø‚£ø‚£ø‚£ß‚£æ\n"+
                    "‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ü‚†â‚£Ñ‚†Ä‚†û‚†õ‚£ø‚£∑‚†Ñ‚†à‚†ë‚††‚†ç‚†ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†Ä‚†ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£Ñ‚†Ä‚¢§‚£¥‚°ó‚†Ç‚£Ñ‚†Ä‚¢ô‚†ª‚£ø‚£ø‚£ø\n"+
                    "‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°è‚¢†‚†Ü‚†ê‚†Ä‚†Ä‚†Ä‚¢∞‚°Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†∞‚°Ü‚¢π‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£¶‚£§‚£Ñ‚°â‚†â‚†©‚¢è‚£∏‚°Ä‚¢ª‚°Ü‚†à‚†Ä‚†¢‚£Ä‚†ª‚°á‚†Ä‚¢Ä‚£ø‚£ø‚£ø\n"+
                    "‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£á‚†à‚†Ä‚†Ä‚¢Ä‚£Ä‚†Ä‚†ò‚†É‚†Ä‚£Ä‚°Ä‚†Ä‚†Ä‚†â‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∂‚£§‚£Ä‚£à‚£Ä‚£Å‚£Ñ‚£Ä‚£Ä‚£Ä‚£§‚£∂‚£æ‚£ø‚£ø‚£ø‚£ø\n"+
                    "‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∂‚£æ‚£ø‚£ø‚£∑‚¢∂‚£∂‚£æ‚£ø‚£ø‚°∑‚£∂‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚¢ø‚†ø‚£ø‚£ø‚£ø‚°ø‚†ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø");
            System.out.println("You have been killed.");
            System.exit(0);
        }
        System.out.print(" ‚†Ä    (\\__/)\n      (‚Ä¢„ÖÖ‚Ä¢)      \n" + //player visual
                "   Ôºø„Éé„ÉΩ „ÉéÔººÔºø      \n" +
                "`/„ÄÄ`/ ‚åíÔºπ‚åí Ôºπ  „ÉΩ     \n" +
                "( „ÄÄ(‰∏â„ÉΩ‰∫∫„ÄÄ /„ÄÄ  |\n" +
                "|„ÄÄÔæâ‚åíÔºº Ôø£Ôø£„ÉΩ   „Éé\n" +
                "„ÉΩÔºøÔºøÔºøÔºûÔΩ§Ôºø_Ôºè\n" +
                "    ÔΩú( Áéã Ôæâ„Äà   \n" +
                "    /Ôæê`„Éº‚ÄïÂΩ°\\  \n" +
                "   /  ‚ï∞    ‚ïØ \\  ");

    }

    /**
     * actions based on what the player chooses (a,r,s)
     * @param action the player inputted action
     * @return if action inputted was valid or not
     */
    public boolean action(String action){
        boolean valid = false;
        if(action.equals("a")) { //attack action
            if (attack <= 0) { //if no attack left
                System.out.println("You cannot attack. Please reload...");
                return valid;
            }
            currentattack = attack;
            attack -= attack;
            valid = true;
            return valid;

        }else if(action.equals("s")){ //shield action
            if(element.equals("water")){
                shield = 10;
            }else if(element.equals("earth")) {
                shield = 5;
            }else if(element.equals("fire")){
                shield = 2;
            }else {
                shield = 3;
            }
            valid = true;
            return valid;

        }

        else if(action.equals("r")){ //reload action
            if(element.equals("water")){
                int waterR = 3;
                attack += waterR;
            }else if(element.equals("earth")) {
                int earthR = 5;
                attack += earthR;
            }else if(element.equals("fire")){
                int fireR = 7;
                attack += fireR;
            }else {
                int windR = 8;
                attack += windR;
            }
            valid = true;
            return valid;

        }
        return valid;
    }

    /**
     * get updated current action
     * @param action player inputted action
     * @return current action performed
     */
    public String getAction(String action){
        if(action.equals("r")){ //reloading print
            if(element.equals("water")){
                return "Reloading 3 water attacks ‚öî...";
            }else if(element.equals("earth")) {
                return "Reloading 5 earth attacks ‚öî...";
            }else if(element.equals("fire")){
                return "Reloading 7 fire attacks ‚öî...";
            }else {
                return "Reloading 8  wind attacks ‚öî...";
            }

        }else if(action.equals("s")) { //shield print
            if (element.equals("water")) {
                return "‚õâShielding 10...";
            } else if (element.equals("earth")) {
                return "‚õâShielding 5...";
            } else if (element.equals("fire")) {
                return "‚õâShielding 2...";
            }else{
                return "‚õâShielding 3...";
            }

        }else if(action.equals("a")) { //attack action
            return "‚öîAttacking " + currentattack + "...";
        }else{
            return "";
        }
    }


    /**
     * get shield based on selected element
     * @return shield value
     */
    public int getshield(){
        if(element.equals("water")){
            return 10;
        }else if(element.equals("earth")) {
            return 5;
        }else if(element.equals("fire")){
            return 2;
        }else {
            return 3;
        }
    }
}
